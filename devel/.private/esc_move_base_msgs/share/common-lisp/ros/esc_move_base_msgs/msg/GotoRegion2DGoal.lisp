; Auto-generated. Do not edit!


(cl:in-package esc_move_base_msgs-msg)


;//! \htmlinclude GotoRegion2DGoal.msg.html

(cl:defclass <GotoRegion2DGoal> (roslisp-msg-protocol:ros-message)
  ((goal
    :reader goal
    :initarg :goal
    :type geometry_msgs-msg:Pose2D
    :initform (cl:make-instance 'geometry_msgs-msg:Pose2D))
   (radius
    :reader radius
    :initarg :radius
    :type cl:float
    :initform 0.0))
)

(cl:defclass GotoRegion2DGoal (<GotoRegion2DGoal>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <GotoRegion2DGoal>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'GotoRegion2DGoal)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name esc_move_base_msgs-msg:<GotoRegion2DGoal> is deprecated: use esc_move_base_msgs-msg:GotoRegion2DGoal instead.")))

(cl:ensure-generic-function 'goal-val :lambda-list '(m))
(cl:defmethod goal-val ((m <GotoRegion2DGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader esc_move_base_msgs-msg:goal-val is deprecated.  Use esc_move_base_msgs-msg:goal instead.")
  (goal m))

(cl:ensure-generic-function 'radius-val :lambda-list '(m))
(cl:defmethod radius-val ((m <GotoRegion2DGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader esc_move_base_msgs-msg:radius-val is deprecated.  Use esc_move_base_msgs-msg:radius instead.")
  (radius m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <GotoRegion2DGoal>) ostream)
  "Serializes a message object of type '<GotoRegion2DGoal>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'goal) ostream)
  (cl:let ((bits (roslisp-utils:encode-single-float-bits (cl:slot-value msg 'radius))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <GotoRegion2DGoal>) istream)
  "Deserializes a message object of type '<GotoRegion2DGoal>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'goal) istream)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:slot-value msg 'radius) (roslisp-utils:decode-single-float-bits bits)))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<GotoRegion2DGoal>)))
  "Returns string type for a message object of type '<GotoRegion2DGoal>"
  "esc_move_base_msgs/GotoRegion2DGoal")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'GotoRegion2DGoal)))
  "Returns string type for a message object of type 'GotoRegion2DGoal"
  "esc_move_base_msgs/GotoRegion2DGoal")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<GotoRegion2DGoal>)))
  "Returns md5sum for a message object of type '<GotoRegion2DGoal>"
  "f655c547d9d6f2aa2a82fedd5d1209db")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'GotoRegion2DGoal)))
  "Returns md5sum for a message object of type 'GotoRegion2DGoal"
  "f655c547d9d6f2aa2a82fedd5d1209db")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<GotoRegion2DGoal>)))
  "Returns full string definition for message of type '<GotoRegion2DGoal>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#goal definition~%geometry_msgs/Pose2D goal~%float32 radius~%~%================================================================================~%MSG: geometry_msgs/Pose2D~%# Deprecated~%# Please use the full 3D pose.~%~%# In general our recommendation is to use a full 3D representation of everything and for 2D specific applications make the appropriate projections into the plane for their calculations but optimally will preserve the 3D information during processing.~%~%# If we have parallel copies of 2D datatypes every UI and other pipeline will end up needing to have dual interfaces to plot everything. And you will end up with not being able to use 3D tools for 2D use cases even if they're completely valid, as you'd have to reimplement it with different inputs and outputs. It's not particularly hard to plot the 2D pose or compute the yaw error for the Pose message and there are already tools and libraries that can do this for you.~%~%~%# This expresses a position and orientation on a 2D manifold.~%~%float64 x~%float64 y~%float64 theta~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'GotoRegion2DGoal)))
  "Returns full string definition for message of type 'GotoRegion2DGoal"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#goal definition~%geometry_msgs/Pose2D goal~%float32 radius~%~%================================================================================~%MSG: geometry_msgs/Pose2D~%# Deprecated~%# Please use the full 3D pose.~%~%# In general our recommendation is to use a full 3D representation of everything and for 2D specific applications make the appropriate projections into the plane for their calculations but optimally will preserve the 3D information during processing.~%~%# If we have parallel copies of 2D datatypes every UI and other pipeline will end up needing to have dual interfaces to plot everything. And you will end up with not being able to use 3D tools for 2D use cases even if they're completely valid, as you'd have to reimplement it with different inputs and outputs. It's not particularly hard to plot the 2D pose or compute the yaw error for the Pose message and there are already tools and libraries that can do this for you.~%~%~%# This expresses a position and orientation on a 2D manifold.~%~%float64 x~%float64 y~%float64 theta~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <GotoRegion2DGoal>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'goal))
     4
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <GotoRegion2DGoal>))
  "Converts a ROS message object to a list"
  (cl:list 'GotoRegion2DGoal
    (cl:cons ':goal (goal msg))
    (cl:cons ':radius (radius msg))
))
